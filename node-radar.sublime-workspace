{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"accor",
				"accordion-group"
			],
			[
				"carou",
				"carousel-caption"
			],
			[
				"font-",
				"font-size"
			],
			[
				"btn",
				"btn-info"
			],
			[
				"ac",
				"accordion-group"
			],
			[
				"panel",
				"panel-info"
			],
			[
				"btn-",
				"btn-default"
			],
			[
				"input-group",
				"input-group-addon"
			],
			[
				"col-",
				"col-md-"
			],
			[
				"opa",
				"opacity"
			],
			[
				"batch",
				"batches"
			],
			[
				"panel-",
				"panel-heading"
			],
			[
				"pro",
				"prototype"
			],
			[
				"ng-",
				"ng-view	AngularJS"
			],
			[
				"drop",
				"dropdown"
			],
			[
				"data",
				"data-toggle"
			],
			[
				"navbar-",
				"navbar-fixed-top"
			],
			[
				"send",
				"sendSequence"
			],
			[
				"dis",
				"disclaim"
			],
			[
				"ty",
				"type"
			],
			[
				"setDe",
				"setDefaultSender"
			],
			[
				"open",
				"openConnexion"
			],
			[
				"Sen",
				"SendData"
			],
			[
				"image",
				"imageList"
			],
			[
				"Op",
				"open	jsWindow"
			],
			[
				"nEnt",
				"nEntityType"
			],
			[
				"szEmail",
				"szEmailSender"
			],
			[
				"nDe",
				"nDetailType"
			],
			[
				"Mater",
				"nMasterType"
			],
			[
				"Retri",
				"RetrieveEntity"
			],
			[
				"iCurrent",
				"iCurrentPage"
			],
			[
				"or",
				"organization"
			],
			[
				"p",
				"prepend	jQuery"
			],
			[
				"Backbone",
				"node-backbone"
			],
			[
				"parse",
				"parseFloat	jsGlobal"
			],
			[
				"Back",
				"Backbone"
			],
			[
				"remo",
				"removeClass	jQuery"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app.js",
			"settings":
			{
				"buffer_size": 13359,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/controllers/MainCtrl.js",
			"settings":
			{
				"buffer_size": 12034,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/dump1090.js",
			"settings":
			{
				"buffer_size": 2326,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/controllers/MenuCtrl.js",
			"settings":
			{
				"buffer_size": 2117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partial/about.jade",
			"settings":
			{
				"buffer_size": 2385,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/controllers/NavBarCtrl.js",
			"settings":
			{
				"buffer_size": 864,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/usr/fcr/node-radar/models/datalayer.js",
			"settings":
			{
				"buffer_size": 5271,
				"line_ending": "Windows"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 1191,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partial/flight.jade",
			"settings":
			{
				"buffer_size": 1142,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/partial/flightdetail.jade",
			"settings":
			{
				"buffer_size": 979,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/partial/history.jade",
			"settings":
			{
				"buffer_size": 871,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gruntfile.js",
			"settings":
			{
				"buffer_size": 410,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/partial/settings.jade",
			"settings":
			{
				"buffer_size": 1117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/planefinder.js",
			"settings":
			{
				"buffer_size": 2145,
				"line_ending": "Windows",
				"name": "var PlaneFinder = function() {"
			}
		},
		{
			"file": "views/includes/sidebar.jade",
			"settings":
			{
				"buffer_size": 766,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/includes/footer.jade",
			"settings":
			{
				"buffer_size": 107,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/includes/navbar.jade",
			"settings":
			{
				"buffer_size": 981,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/app.js",
			"settings":
			{
				"buffer_size": 1894,
				"line_ending": "Windows"
			}
		},
		{
			"file": "sass/style.scss",
			"settings":
			{
				"buffer_size": 3218,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/index.jade",
			"settings":
			{
				"buffer_size": 736,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/ProductionManager.sln",
			"settings":
			{
				"buffer_size": 99287,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/img/airplane-test.svg",
			"settings":
			{
				"buffer_size": 3526,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/js/controllers/MapCtrl.js",
			"settings":
			{
				"buffer_size": 1260,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/includes/head.jade",
			"settings":
			{
				"buffer_size": 1365,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "angular.module('demo', ['google-maps'])\n\n.factory('demo', function($timeout, $q) {\n  \n})\n\n.controller('MainCtrl', function($scope, demo) {\n  \n  $scope.activeTab = 1;\n  \n  $scope.map = {\n      zoom: 14,\n      center: {\n        latitude: 45,\n        longitude: -73\n      },\n      options: {\n        streetViewControl: false,\n        overviewMapControl: false,\n        panControl: false,\n        zoomControl: false,\n        mapTypeControl: false,\n        disableDoubleClickZoom: true,\n      }\n  };\n  \n    $scope.triangle = {\n      path: 'M 0 0 L -35 -100 L 35 -100 z',\n      fillColor: '#3884ff',\n      fillOpacity: 0.7,\n      scale: 1,\n      strokeColor: '#356cde',\n      rotation: 90,\n      strokeWeight: 1\n    };\n    \n    $scope.customSVGmarkerCircle = {\n      //path: 'M40,20  A30,30 0 0,0 60,60',\n      path: 'M 0,0  A10,10 0 1,0 1,1',\n      fillColor: 'green',\n      fillOpacity: 0.7,\n      anchor: new google.maps.Point(-7, 7)\n    };\n    \n    $scope.standardSymbolCircle = {\n      path: google.maps.SymbolPath.CIRCLE,\n      fillColor: 'red',\n       fillOpacity: 0.7,\n      strokeWeight: 1,\n      scale: 5\n    };\n  \n});\n\n/**!\n * The MIT License\n * \n * Copyright (c) 2010-2012 Google, Inc. http://angularjs.org\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n * angular-google-maps\n * https://github.com/nlaplante/angular-google-maps\n * \n * @author Nicolas Laplante https://plus.google.com/108189012221374960701\n */\n\nangular.module('google-maps', []);/**!\n * The MIT License\n *\n * Copyright (c) 2010-2012 Google, Inc. http://angularjs.org\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * angular-google-maps\n * https://github.com/nlaplante/angular-google-maps\n *\n * @author Nicolas Laplante https://plus.google.com/108189012221374960701\n */\n\nangular.module('google-maps')\n    .directive('googleMap', ['$log', '$timeout', function ($log, $timeout) {\n\n        \"use strict\";\n\n        var DEFAULTS = {\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n\n        /*\n         * Utility functions\n         */\n\n        /**\n         * Check if a value is true\n         */\n        function isTrue(val) {\n            return angular.isDefined(val) &&\n                val !== null &&\n                val === true ||\n                val === '1' ||\n                val === 'y' ||\n                val === 'true';\n        }\n\n        return {\n            /**\n             *\n             */\n            restrict: 'ECMA',\n\n            /**\n             *\n             */\n            transclude: true,\n\n            /**\n             *\n             */\n            replace: false,\n\n            /**\n             *\n             */\n            //priority: 100,\n\n            /**\n             *\n             */\n            template: '<div class=\"angular-google-map\"><div class=\"angular-google-map-container\"></div><div ng-transclude style=\"display: none\"></div></div>',\n\n            /**\n             *\n             */\n            scope: {\n                center: '=center',          // required\n                zoom: '=zoom',              // required\n                dragging: '=dragging',      // optional\n                markers: '=markers',        // optional\n                refresh: '&refresh',        // optional\n                windows: '=windows',        // optional\n                events: '=events'           // optional\n            },\n\n            /**\n             *\n             */\n            controller: ['$scope', function ($scope) {\n                /**\n                 * @return the map instance\n                 */\n                this.getMap = function () {\n                    return $scope.map;\n                };\n            }],\n\n            /**\n             *\n             * @param scope\n             * @param element\n             * @param attrs\n             */\n            link: function (scope, element, attrs) {\n\n                // Center property must be specified and provide lat &\n                // lng properties\n                if (!angular.isDefined(scope.center) ||\n                    (!angular.isDefined(scope.center.latitude) || !angular.isDefined(scope.center.longitude))) {\n\n                    $log.error(\"angular-google-maps: could not find a valid center property\");\n                    return;\n                }\n\n                if (!angular.isDefined(scope.zoom)) {\n                    $log.error(\"angular-google-maps: map zoom property not set\");\n                    return;\n                }\n\n                var el = angular.element(element);\n\n                el.addClass(\"angular-google-map\");\n\n                // Parse options\n                var opts = {options: {}};\n                if (attrs.options) {\n                    opts.options = angular.fromJson(attrs.options);\n                }\n\n                if (attrs.type) {\n                    var type = attrs.type.toUpperCase();\n\n                    if (google.maps.MapTypeId.hasOwnProperty(type)) {\n                        opts.mapTypeId = google.maps.MapTypeId[attrs.type.toUpperCase()];\n                    }\n                    else {\n                        $log.error('angular-google-maps: invalid map type \"' + attrs.type + '\"');\n                    }\n                }\n\n                // Create the map\n                var _m = new google.maps.Map(el.find('div')[1], angular.extend({}, DEFAULTS, opts, {\n                    center: new google.maps.LatLng(scope.center.latitude, scope.center.longitude),\n                    draggable: isTrue(attrs.draggable),\n                    zoom: scope.zoom\n                }));\n\n                var dragging = false;\n\n                google.maps.event.addListener(_m, 'dragstart', function () {\n                    dragging = true;\n                    $timeout(function () {\n                        scope.$apply(function (s) {\n                            s.dragging = dragging;\n                        });\n                    });\n                });\n\n                google.maps.event.addListener(_m, 'dragend', function () {\n                    dragging = false;\n                    $timeout(function () {\n                        scope.$apply(function (s) {\n                            s.dragging = dragging;\n                        });\n                    });\n                });\n\n                google.maps.event.addListener(_m, 'drag', function () {\n                    var c = _m.center;\n\n                    $timeout(function () {\n                        scope.$apply(function (s) {\n                            s.center.latitude = c.lat();\n                            s.center.longitude = c.lng();\n                        });\n                    });\n                });\n\n                google.maps.event.addListener(_m, 'zoom_changed', function () {\n                    if (scope.zoom != _m.zoom) {\n\n                        $timeout(function () {\n                            scope.$apply(function (s) {\n                                s.zoom = _m.zoom;\n                            });\n                        });\n                    }\n                });\n\n                google.maps.event.addListener(_m, 'center_changed', function () {\n                    var c = _m.center;\n\n                    $timeout(function () {\n                        scope.$apply(function (s) {\n                            if (!_m.dragging) {\n                                s.center.latitude = c.lat();\n                                s.center.longitude = c.lng();\n                            }\n                        });\n                    });\n                });\n\n                if (angular.isDefined(scope.events) &&\n                    scope.events !== null &&\n                    angular.isObject(scope.events)) {\n\n                    var getEventHandler = function (eventName) {\n                        return function () {\n                            scope.events[eventName].apply(scope, [_m, eventName, arguments ]);\n                        };\n                    };\n\n                    for (var eventName in scope.events) {\n\n                        if (scope.events.hasOwnProperty(eventName) && angular.isFunction(scope.events[eventName])) {\n                            google.maps.event.addListener(_m, eventName, getEventHandler(eventName));\n                        }\n                    }\n                }\n\n                // Put the map into the scope\n                scope.map = _m;\n\n                google.maps.event.trigger(_m, \"resize\");\n\n                // Check if we need to refresh the map\n                if (!angular.isUndefined(scope.refresh())) {\n                    scope.$watch(\"refresh()\", function (newValue, oldValue) {\n                        if (newValue && !oldValue) {\n                            //  _m.draw();\n                            var coords = new google.maps.LatLng(newValue.latitude, newValue.longitude);\n\n                            if (isTrue(attrs.pan)) {\n                                _m.panTo(coords);\n                            }\n                            else {\n                                _m.setCenter(coords);\n                            }\n\n\n                        }\n                    });\n                }\n\n                // Update map when center coordinates change\n                scope.$watch('center', function (newValue, oldValue) {\n                    if (newValue === oldValue) {\n                        return;\n                    }\n\n                    if (!dragging) {\n\n                        var coords = new google.maps.LatLng(newValue.latitude, newValue.longitude);\n\n                        if (isTrue(attrs.pan)) {\n                            _m.panTo(coords);\n                        }\n                        else {\n                            _m.setCenter(coords);\n                        }\n\n                        //_m.draw();\n                    }\n                }, true);\n\n                scope.$watch('zoom', function (newValue, oldValue) {\n                    if (newValue === oldValue) {\n                        return;\n                    }\n\n                    _m.setZoom(newValue);\n\n                    //_m.draw();\n                });\n            }\n        };\n    }]);\n;/**!\n * The MIT License\n *\n * Copyright (c) 2010-2012 Google, Inc. http://angularjs.org\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * angular-google-maps\n * https://github.com/nlaplante/angular-google-maps\n *\n * @author Nicolas Laplante https://plus.google.com/108189012221374960701\n */\n\n/**\n * Map marker directive\n *\n * This directive is used to create a marker on an existing map.\n * This directive creates a new scope.\n *\n * {attribute coords required}  object containing latitude and longitude properties\n * {attribute icon optional}  string url to image used for marker icon\n * {attribute animate optional} if set to false, the marker won't be animated (on by default)\n */\n\nangular.module('google-maps')\n    .directive('marker', ['$log', '$timeout', function ($log, $timeout) {\n\n        \"use strict\";\n\n        var DEFAULTS = {\n            // Animation is enabled by default\n            animation: google.maps.Animation.DROP\n        };\n\n        /**\n         * Check if a value is literally false\n         * @param value the value to test\n         * @returns {boolean} true if value is literally false, false otherwise\n         */\n        function isFalse(value) {\n            return ['false', 'FALSE', 0, 'n', 'N', 'no', 'NO'].indexOf(value ) !== -1;\n        }\n        \n        return {\n            restrict: 'ECMA',\n            require: '^googleMap',\n            priority: -1,\n            transclude: true,\n            template: '<span class=\"angular-google-map-marker\" ng-transclude></span>',\n            replace: true,\n            scope: {\n                coords: '=coords',\n                icon: '=icon',\n                click: '&click'\n            },\n            controller: function ($scope, $element) {\n             this.getMarker = function () {\n                 return $element.data('instance');\n             };\n            },\n            link: function (scope, element, attrs, mapCtrl) {\n\n                // Validate required properties\n                if (angular.isUndefined(scope.coords) ||\n                    scope.coords === null ||\n                    angular.isUndefined(scope.coords.latitude) ||\n                    angular.isUndefined(scope.coords.longitude)) {\n\n                    $log.error(\"marker: no valid coords attribute found\");\n                    return;\n                }\n\n                // Wrap marker initialization inside a $timeout() call to make sure the map is created already\n                $timeout(function () {\n                    var opts = angular.extend({}, DEFAULTS, {\n                        position: new google.maps.LatLng(scope.coords.latitude, scope.coords.longitude),\n                        map: mapCtrl.getMap(),\n                        icon: scope.icon,\n                        visible: scope.coords.latitude !== null && scope.coords.longitude !== null\n                    });\n\n                    // Disable animations\n                    if (angular.isDefined(attrs.animate) && isFalse(attrs.animate)) {\n                        delete opts.animation;\n                    }\n\n                    var marker = new google.maps.Marker(opts);\n                    element.data('instance', marker);\n\n                    google.maps.event.addListener(marker, 'click', function () {\n                        if (angular.isDefined(attrs.click) && scope.click !== null)\n                            scope.click();\n                    });\n\n                    scope.$watch('coords', function (newValue, oldValue) {\n                        if (newValue !== oldValue) {\n                            if (newValue) {\n                                marker.setMap(mapCtrl.getMap());\n                                marker.setPosition(new google.maps.LatLng(newValue.latitude, newValue.longitude));\n                                marker.setVisible(newValue.latitude !== null && newValue.longitude !== null);\n                            }\n                            else {\n                                // Remove marker\n                                marker.setMap(null);\n                            }\n                        }\n                    }, true);\n\n                    scope.$watch('icon', function (newValue, oldValue) {\n                        if (newValue !== oldValue) {\n                            marker.icon = newValue;\n                            marker.setMap(null);   \n                            marker.setMap(mapCtrl.getMap());\n                            marker.setPosition(new google.maps.LatLng(scope.coords.latitude, scope.coords.longitude));\n                            marker.setVisible(scope.coords.latitude !== null && scope.coords.longitude !== null);\n                        }\n                    }, true);\n\n                    // remove marker on scope $destroy\n                    scope.$on(\"$destroy\", function () {\n                        marker.setMap(null);\n                    });\n                });\n            }\n        };\n    }]);\n;/**!\n * The MIT License\n *\n * Copyright (c) 2010-2012 Google, Inc. http://angularjs.org\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * angular-google-maps\n * https://github.com/nlaplante/angular-google-maps\n *\n * @author Nicolas Laplante https://plus.google.com/108189012221374960701\n */\n\nangular.module(\"google-maps\")\n    .directive(\"polyline\", ['$log', '$timeout', function ($log, $timeout) {\n\n        \"use strict\";\n\n        var DEFAULTS = {\n\n        };\n\n        function validatePathPoints(path) {\n            for (var i = 0; i < path.length; i++) {\n              if (angular.isUndefined(path[i].latitude) ||\n                  angular.isUndefined(path[i].longitude)) {\n                  return false;\n              }\n            }\n\n            return true;\n        }\n\n        function convertPathPoints(path) {\n            var result = [];\n\n            for (var i = 0; i < path.length; i++) {\n                result.push(new google.maps.LatLng(path[i].latitude, path[i].longitude));\n            }\n\n            return result;\n        }\n\n        function extendMapBounds(map, points) {\n            var bounds = new google.maps.LatLngBounds();\n\n            for (var i = 0; i < points.length; i++) {\n                bounds.extend(points[i]);\n            }\n\n            map.fitBounds(bounds);\n        }\n\n        /*\n         * Utility functions\n         */\n\n        /**\n         * Check if a value is true\n         */\n        function isTrue(val) {\n            return angular.isDefined(val) &&\n                val !== null &&\n                val === true ||\n                val === '1' ||\n                val === 'y' ||\n                val === 'true';\n        }\n\n        return {\n            restrict: 'ECA',\n            require: '^googleMap',\n            scope: {\n                path: '=path',\n                stroke: '=stroke'\n            },\n            link: function (scope, element, attrs, mapCtrl) {\n                // Validate required properties\n                if (angular.isUndefined(scope.path) ||\n                    scope.path === null ||\n                    scope.path.length < 2 ||\n                    !validatePathPoints(scope.path)) {\n\n                    $log.error(\"polyline: no valid path attribute found\");\n                    return;\n                }\n\n                // Wrap polyline initialization inside a $timeout() call to make sure the map is created already\n                $timeout(function () {\n                    var map = mapCtrl.getMap();\n\n                    var pathPoints = convertPathPoints(scope.path);\n\n                    var opts = angular.extend({}, DEFAULTS, {\n                        map: map,\n                        path: pathPoints,\n                        strokeColor: scope.stroke && scope.stroke.color,\n                        strokeOpacity: scope.stroke && scope.stroke.opacity,\n                        strokeWeight: scope.stroke && scope.stroke.weight\n                    });\n\n                    var polyline = new google.maps.Polyline(opts);\n\n                    if (isTrue(attrs.fit)) {\n                        extendMapBounds(map, pathPoints);\n                    }\n\n                    scope.$watch('path', function (newValue, oldValue) {\n                        if (newValue !== oldValue) {\n                            if (newValue) {\n                                var newPathPoints = convertPathPoints(newValue);\n\n                                polyline.setMap(map);\n                                polyline.setPath(newPathPoints);\n\n                                if (isTrue(attrs.fit)) {\n                                    extendMapBounds(map, newPathPoints);\n                                }\n                            }\n                            else {\n                                // Remove polyline\n                                polyline.setMap(null);\n                            }\n                        }\n                    }, true);\n\n                    // Remove polyline on scope $destroy\n                    scope.$on(\"$destroy\", function () {\n                        polyline.setMap(null);\n                    });\n                });\n            }\n        };\n    }]);\n;/**!\n * The MIT License\n *\n * Copyright (c) 2010-2012 Google, Inc. http://angularjs.org\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * angular-google-maps\n * https://github.com/nlaplante/angular-google-maps\n *\n * @author Nicolas Laplante https://plus.google.com/108189012221374960701\n */\n\n/**\n * Map info window directive\n *\n * This directive is used to create an info window on an existing map.\n * This directive creates a new scope.\n *\n * {attribute coords required}  object containing latitude and longitude properties\n * {attribute show optional}    map will show when this expression returns true\n */\n\nangular.module(\"google-maps\").\n    directive(\"window\", ['$log', '$timeout','$compile', '$http', '$templateCache', function ($log, $timeout, $compile, $http, $templateCache) {\n\n        \"use strict\";\n\n        var DEFAULTS = {\n\n        };\n\n        return {\n          restrict: 'ECMA',\n          template: '<span class=\"angular-google-maps-window\" ng-transclude></span>',\n          transclude: true,\n          priority: -100,\n          require: ['^googleMap', '^?marker'],\n          scope: {\n            coords: '=coords',\n            show: '&show',\n            templateUrl: '=templateurl',\n            templateParameter: '=templateparameter',\n            isIconVisibleOnClick: '=isiconvisibleonclick',\n            closeClick: '&closeclick'           //scope glue to gmap InfoWindow closeclick\n          },\n          link: function (scope, element, attrs, ctrls) {\n              $timeout(function () {\n\n                  var isIconVisibleOnClick = true;\n\n                  if (angular.isDefined(attrs.isiconvisibleonclick)) \n                        isIconVisibleOnClick = scope.isIconVisibleOnClick;\n\n                  var mapCtrl = ctrls[0],\n                      markerCtrl = ctrls.length > 1 ? ctrls[1] : null;\n\n                  var opts = angular.extend({}, DEFAULTS, {\n                      content: element.html(),\n                      position: angular.isDefined(markerCtrl) ? markerCtrl.getMarker().getPosition() :\n                          new google.maps.LatLng(scope.coords.latitude, scope.coords.longitude)\n                  });\n\n                  var win = new google.maps.InfoWindow(opts);\n\n                  if (angular.isDefined(markerCtrl)) {\n                      // Open window on click\n                      var markerInstance = markerCtrl.getMarker();\n\n                      markerInstance.setClickable(true);\n\n                      // Show the window and hide the marker on click\n                      var initialMarkerVisibility;\n                      google.maps.event.addListener(markerInstance, 'click', function () {\n                          win.setPosition(markerInstance.getPosition());\n                          win.open(mapCtrl.getMap());\n\n                          initialMarkerVisibility = markerInstance.getVisible();\n\n                          markerInstance.setVisible(isIconVisibleOnClick);\n                      });\n\n                      // Set visibility of marker back to what it was before opening the window\n                      google.maps.event.addListener(win, 'closeclick', function () {\n                        markerInstance.setVisible(initialMarkerVisibility);\n                        scope.closeClick();\n                      });\n                  }\n\n                   function showWindow() {\n                    if (scope.templateUrl) {\n                        $http.get(scope.templateUrl, { cache: $templateCache })\n                             .then(function (content) {\n                                    var templateScope = scope.$new();\n                                    if (angular.isDefined(scope.templateParameter)) {\n                                        templateScope.parameter = scope.templateParameter;\n                                    }\n                                    var compiled = $compile(content.data)(templateScope);\n                                    win.setContent(compiled.get(0));\n                                    win.open(mapCtrl.getMap());\n                              });\n                    } else {\n                        win.open(mapCtrl.getMap());\n                    }\n                  }\n\n                  function hideWindow() {\n                    win.close();\n                  }\n\n                  scope.$watch('show()', function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        if (newValue) {\n                            showWindow();\n                        }\n                        else {\n                            hideWindow();\n                        }\n                    } else if (newValue && !win.getMap()) {\n                        // If we're initially showing the marker and it's not yet visible, show it.\n                        showWindow();\n                    }\n                  },true);\n              }, 50);\n          }\n        };\n    }]);\n",
			"settings":
			{
				"buffer_size": 29267,
				"line_ending": "Windows",
				"name": "angular.module('demo', ['google-maps'])"
			}
		},
		{
			"contents": "\n<html ng-app=\"demo\" >\n<head>\n  <meta charset=\"utf-8\">\n  <title>AngularJS Plunker</title>\n  <script data-require=\"jquery@*\" data-semver=\"2.0.3\" src=\"http://code.jquery.com/jquery-2.0.3.min.js\"></script>\n    <script data-require=\"bootstrap@3.1.1\" data-semver=\"3.1.1\" src=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js\"></script>\n    <link data-require=\"bootstrap-css@3.1.1\" data-semver=\"3.1.1\" rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\" />\n    \n    \n  <script src=\"http://maps.googleapis.com/maps/api/js?sensor=false&language=en&libraries=geometry\"></script>\n\n  <script>document.write(\"<base href=\\\"\" + document.location + \"\\\" />\");</script>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.js\"></script>\n\n</head>\n<body ng-controller=\"MainCtrl\">\n  <h1>Marker rotation</h1>\n    \n  <div class=\"google-map\"  \n    center=\"map.center\" \n    zoom=\"map.zoom\" \n    draggable=\"false\">\n      <marker coords=\"map.center\" icon=\"triangle\"></marker> \n      <marker coords=\"map.center\" icon=\"customSVGmarkerCircle\"></marker>\n      <marker coords=\"map.center\" icon=\"standardSymbolCircle\"></marker>\n    </div>\n    \n    \n    <div class=\"well\">\n      You may need to compensate for the way you draw your svg by \n      changing the anchor point\n    \n    <div ng-form >\n      Set Rotation of blue triangle: \n      <input type=\"text\" ng-model=\"triangle.rotation\" />\n      \n    </div>\n    </div>\n    \n</body>\n</html>",
			"settings":
			{
				"buffer_size": 1481,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/img/airplane.svg",
			"settings":
			{
				"buffer_size": 5970,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/jscript.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"indent",
				"Indent XML"
			],
			[
				"",
				"Auto indent"
			],
			[
				"packae",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"in",
				"Auto indent"
			],
			[
				"xml",
				"Indent XML"
			],
			[
				"inde",
				"Auto indent"
			],
			[
				"syn",
				"Set Syntax: Pascal"
			],
			[
				"syntax: pas",
				"Set Syntax: Pascal"
			],
			[
				"can",
				"Can I Switch To Sublime Text 3?"
			],
			[
				"git",
				"GitHub: History"
			],
			[
				"hub",
				"Can I Switch To Sublime Text 3?"
			],
			[
				"conso",
				"Set Syntax: R Console"
			],
			[
				"console",
				"Set Syntax: R Console"
			]
		],
		"width": 472.0
	},
	"console":
	{
		"height": 113.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/usr/fcr/Node-radar/public/stylesheets/style.css",
		"/D/usr/fcr/Node-radar/public/js/services/settings.js",
		"/C/Program Files/Boot2Docker for Windows/start.sh",
		"/D/usr/fcr/Node-radar/sass/style.scss",
		"/D/usr/fcr/Node-radar/public/img/airplane-test-bis.svg",
		"/C/oracle/product/11.2.0/client_1/network/admin/tnsnames.ora",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/packages/repositories.config",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/ProductionManager.vssscc",
		"/D/usr/fcr/Node-radar/node_modules/sbs1/bin/sbs1.js",
		"/D/usr/fcr/Node-radar/node_modules/sbs1/index.js",
		"/D/usr/fcr/Node-radar/node_modules/sbs1/msgs.txt",
		"/D/usr/fcr/Node-radar/config/development.json",
		"/D/usr/fcr/Node-radar/config/production.json",
		"/D/usr/fcr/Node-radar/public/js/controllers/MainCtrl.js",
		"/D/usr/fcr/Node-radar/public/js/controllers.js",
		"/D/usr/fcr/Node-radar/models/DataAccessLayer.js",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/Java/IntegrationService/pom.xml",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/DataIngestion/DataIngestion/Example/ProductionManagerJson.js",
		"/X/v2/sl/sle/Dashboard/Java/IntegrationService/Talend/UserDatamart/PRODUCTIONMANAGER/metadata/connections/Datamart_0.1.item",
		"/X/v2/sl/sle/Dashboard/Java/IntegrationService/Talend/UserDatamart/PRODUCTIONMANAGER/metadata/connections/ProductionManager_0.1.item",
		"/X/v2/sl/sle/Dashboard/Java/IntegrationService/Talend/UserDatamart/PRODUCTIONMANAGER/metadata/connections/Datamart_0.1.properties",
		"/X/v2/sl/sle/Dashboard/Java/IntegrationService/Talend/UserDatamart/PRODUCTIONMANAGER/metadata/connections/ProductionManager_0.1.properties",
		"/D/usr/fcr/QIcomPCR/Web/models/socketserver.js",
		"//itesoft.local/aim/IT_Ref/2.5/2.5.4/ITESOFT.FreeMind/reference/slfi/datas/mod/FI_FULLTEXT.xft",
		"//itesoft.local/aim/IT_Ref/2.5/2.5.4/ITESOFT.FreeMind/reference/slfi/datas/mod/FI_FTREC.mtx",
		"//itesoft.local/aim/IT_Ref/2.5/2.5.4/ITESOFT.FreeMind/reference/slfi/datas/database/Structure/MySQL/MYSQL_FMFI_Create.sql",
		"/D/usr/fcr/productionmanager/public/js/controllers.js",
		"/D/usr/fcr/Node-radar/views/includes/head.jade",
		"/D/usr/fcr/Node-radar/node_modules/sbs1/mlat.py~",
		"/C/Program Files (x86)/VirtualRadar/Web/script/vrs/aircraft.js",
		"/C/Program Files (x86)/VirtualRadar/Web/script/vrs/aircraftPlotter.js",
		"/C/Program Files (x86)/VirtualRadar/Web/desktop.html",
		"/X/v2/sl/sle/Dashboard/DataIngestion/DataIngestion/Example/ProductionManagerJson.js",
		"/D/usr/fcr/productionmanager/models/DataAccessLayer.js",
		"/D/usr/fcr/productionmanager/app.js",
		"/D/usr/fcr/productionmanager/views/includes/sidebar.jade",
		"/D/usr/fcr/productionmanager/views/includes/navbar.jade",
		"/D/usr/fcr/productionmanager/public/js/app.js",
		"/D/usr/fcr/productionmanager/views/partial/freemind.jade",
		"/D/usr/fcr/productionmanager/sass/style.scss",
		"/D/usr/fcr/productionmanager/views/index.jade",
		"/D/usr/fcr/productionmanager/views/partial/users.jade",
		"/D/usr/fcr/productionmanager/views/includes/footer.jade",
		"/D/usr/fcr/productionmanager/views/includes/head.jade",
		"/D/usr/fcr/productionmanager/gruntfile.js",
		"/D/usr/fcr/productionmanager/.initconfig/watch.js",
		"/D/usr/fcr/productionmanager/public/stylesheets/style.css",
		"/D/usr/fcr/productionmanager/public/js/highcharts/highcharts-ng.js",
		"/C/Users/fcr/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/D/usr/fcr/productionmanager/views/includes/foot.jade",
		"/D/usr/fcr/productionmanager/views/partials/users.jade",
		"/D/usr/fcr/productionmanager/views/partials/freemind.jade",
		"/C/Program Files (x86)/itesoft/ProductionManager/WebApp/Content/Site.css",
		"/D/usr/fcr/productionmanager/.initconfig/sass.js",
		"/D/usr/fcr/StreamLineEngine/conf/w4.default.properties",
		"/D/usr/fcr/StreamLineEngine/conf/share.properties",
		"/D/usr/fcr/StreamLineEngine/conf/itesoftShare-springContext.xml",
		"/D/usr/fcr/StreamLineEngine/conf/w4.properties",
		"/D/usr/fcr/StreamLineEngine/conf/slimport.properties",
		"/D/usr/fcr/StreamLineEngine/conf/service_common.conf",
		"/D/usr/fcr/StreamLineEngine/conf/configurationKeys.default.properties",
		"/D/usr/fcr/StreamLineEngine/services/sendMail/conf/smtp.properties",
		"/D/usr/fcr/productionmanager/public/stylesheets/aplication.scss",
		"/C/Users/fcr/Desktop/pocker99.txt",
		"/C/Program Files (x86)/itesoft/ProductionManager/WebApp/Areas/Assign/Views/Activities/Index.cshtml",
		"/C/Users/fcr/Desktop/fcr_winamax.txt",
		"/C/Users/fcr/Desktop/platinium.js",
		"/C/Users/fcr/Downloads/platiniumrift.txt",
		"/C/Users/fcr/Desktop/platiniumrift_39coups.js",
		"/C/Program Files (x86)/itesoft/ProductionManager/WebApp/Web.config",
		"/C/test.js",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/Java/IntegrationService/lib/log4j.xml",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/slfi/ITFI_FtHeader/src/Main.pas",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/slfi/ITFI_FtHeader/src/CheckData.pas",
		"/C/Program Files (x86)/itesoft/ProductionManager/WebApp/App_Data/Profiles.xml",
		"/C/Python27/get-pip.py",
		"/C/qwt-6.1.2/qwtbuild.pri",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/tst/MSTest/DataIngestion.BLL.TestProject/DataIngestion.BLL.TestProject.csproj",
		"/C/BranchStatus/js/widget.js",
		"/D/usr/fcr/pthread-win32/config.h",
		"/D/usr/fcr/pthread-win32/README",
		"/D/usr/fcr/QIcomPCR/3rdparty/rtl-sdr/include/rtl-sdr.h",
		"/K/MyJabberFiles/dsm@itesoft.local/productionManagerNotifier.default.properties",
		"/D/usr/fcr/rtl-sdr/src/rtl_fm.c",
		"/D/usr/fcr/FM241/sources/X/v2/sl/slfi/common/MergePro_obj.pas",
		"/D/usr/fcr/FM241/sources/X/v2/sl/slfi/common/slfi_obj.pas",
		"/X/v2/sl/slfi/common/slfi_obj.pas",
		"/X/v2/sl/slfi/ITFI_Com3Event/src/main.pas",
		"/D/usr/fcr/wxWidgets-3.0.2/build/msw/build2013.bat",
		"/X/v2/sl/slfi/ITFI_check/src/FMFI.pas",
		"/X/v2/sl/sle/Dashboard/Data/UserDataMart/Postgre User Datamart Initialize.sql",
		"/C/Program Files (x86)/itesoft/ProductionManager/Services/ITDATAMARTINTEGRATION/job/UserDatamart/Default.properties.sample",
		"/C/Program Files (x86)/itesoft/ProductionManager/Services/ITDATAMARTINTEGRATION/job/UserDatamart/Default.properties.new",
		"/D/dashboard/elasticsearch-1.4.2/config/elasticsearch.yml",
		"/C/Program Files (x86)/itesoft/ProductionManager/DataIngestionRest/Web.config",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/DataIngestion/DataIngestion/Web.config",
		"/C/Program Files/Java/jre7/lib/logging.properties",
		"/D/dashboard/kibana-3.1.2/config.js",
		"/D/usr/fcr/QIcomPCR/src/backend/sound/CPortAudio.h",
		"/D/usr/fcr/rtl-sdr/src/rtl_sdr.c",
		"/D/usr/fcr/rtl-sdr/src/convenience/convenience.c",
		"/D/usr/fcr/pthread-win32/pthread.h",
		"/D/usr/fcr/QIcomPCR/3rdparty/rtl-sdr/include/libusb.h",
		"/C/qwt-6.1.2/qwtconfig.pri",
		"/D/usr/fcr/QIcomPCR/cmake/Modules/FindQwt.cmake",
		"/D/usr/fcr/QIcomPCR/src/CMakeLists.txt",
		"/C/Users/fcr/Desktop/ParticipationRequete1.sql",
		"/C/Users/fcr/Desktop/ParticipationRequete2.sql",
		"/C/Users/fcr/Desktop/ParticipationRequete3.sql",
		"/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/Java/IntegrationService/lib/logback.xml",
		"/C/Users/fcr/Desktop/traces.txt",
		"/C/Users/fcr/Desktop/deviceinfo.txt",
		"/X/v2/it_processlevel/src/it_processLevel.cpp",
		"/D/usr/fcr/QIcomPCR/src/backend/sound/CPortAudio.cpp",
		"/X/Technos/it_process/src/IT_ProcessC6.bpr",
		"/D/usr/fcr/portaudio/build/msvc/readme.txt",
		"/D/usr/fcr/rtl-sdr/src/librtlsdr.c",
		"/D/usr/fcr/QIcomPCR/3rdparty/rtl-sdr/include/rtl-sdr_export.h",
		"/D/usr/fcr/rtl-sdr/src/convenience/convenience.h",
		"/X/v2/xdfcom3/src/com3common.pas",
		"/X/v2/sl/slfi/ITFI_check/src/Check.pas",
		"/X/v2/sl/sle/Dashboard/Java/IntegrationService/pom.xml",
		"/C/Users/fcr/Desktop/ProductionManager.js",
		"/X/v2/sl/sle/Dashboard/WebApp/Dashboard.WebApp/Web.dev.Debug.config",
		"/X/v2/sl/slfi/ITFI_FtHeader/src/Main.pas",
		"/X/v2/sl/slfi/ITFI_FtHeader/src/CheckData.pas",
		"/X/v2/sl/slfi/common/ConstFMFI.pas",
		"/X/v2/sl/common/Ssd_Obj.pas"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 96.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".push",
			"trackhisto",
			"trackhistory",
			"track",
			"21",
			"Build",
			"splice",
			"type",
			"PlaneFinder",
			"apply",
			"type",
			"saveAircraft",
			"ojdbc",
			"$apply",
			"JSON",
			"ora",
			"out_of",
			"out_of_bound",
			"=\"69\"",
			"REM",
			"REMMIT",
			"=\"61\"",
			"=\"67\"",
			"STATUS_CHANGE",
			"svg",
			"M ",
			"triangle",
			"customSVGmarkerCircle",
			"svg",
			"ActivityACTIVITYID",
			"activityActi",
			"icon",
			".glyphicon",
			"-search",
			"black",
			"git",
			"menu",
			"header",
			"wrapper",
			"slimport",
			"http",
			"http.cors.enabled",
			"DATE",
			"CONVERT",
			"afterc",
			"UpdateBatchStatus",
			"docty",
			"prior",
			"doc",
			"docty",
			"PRIOR",
			"/*",
			"downsample_passes",
			"rate_in",
			"post_downsample",
			"rate_in",
			"downsample",
			"prev_index",
			"downsample",
			"deemph_filter",
			"deemph",
			".rate_out",
			"deemp",
			"/*",
			"deemph_a",
			"low_pass",
			"downsample",
			"lp_len",
			"rms",
			"full_demod",
			"fm_demod",
			"rtlsdr_set",
			"low_pass",
			"downsam",
			"rtlsdr_",
			"dongle_bw",
			"MAXIMUM_RATE",
			"rate",
			"agc",
			"shift",
			"dc_",
			"AUtorotate",
			"downsample_passes",
			"mode_demod",
			"am_demod",
			"rate",
			"dongle.rate",
			"MAXIMUM_RATE",
			"DEFAULT_SAMPLE_RATE",
			"buffer",
			"dongle_thread_fn",
			"playbackCallback",
			"mark_shared_buffer",
			"dongle",
			"dongle_thread_fn",
			"read_sync",
			"dongle_thread_fn",
			"demod_thread_fn",
			"sync",
			"_sync_",
			"read_",
			"Am",
			"deviceList",
			"verbose_device_search",
			"dongle_state",
			"proxy",
			"jtds",
			"afterclosetask",
			".afterclosetask",
			"coinitialize",
			"LoadCom3Event",
			"afterclose",
			"closetask",
			"getWEBERPCheckResult",
			"CallERPControlsWEB",
			"CallErpControls",
			"CallErpControlW",
			"clicco254656",
			"disclaim",
			"checkdocty",
			"ManageDocT",
			"ACTIVEX_BARCODE_READER",
			"manageDocdate",
			"CheckDocDa",
			"EliminateUnvalidDates",
			"ManageDocDate",
			"Date",
			"StandardWebCapture"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Dump1090",
			"",
			"\\\"\"+context.SourceDatabase_Schema+\"\\\".",
			"",
			"\\\"\"+context.SourceDatabase_Schema+\"\\\"",
			"\"",
			"SupplierPortalAdapter"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13359,
						"regions":
						{
						},
						"selection":
						[
							[
								10706,
								10706
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5686.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "public/js/controllers/MainCtrl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12034,
						"regions":
						{
						},
						"selection":
						[
							[
								7875,
								7875
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1881.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "models/dump1090.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2326,
						"regions":
						{
						},
						"selection":
						[
							[
								1880,
								1880
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/js/controllers/MenuCtrl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2117,
						"regions":
						{
						},
						"selection":
						[
							[
								1116,
								1116
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/partial/about.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2385,
						"regions":
						{
						},
						"selection":
						[
							[
								471,
								471
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 1207.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "public/js/controllers/NavBarCtrl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 864,
						"regions":
						{
						},
						"selection":
						[
							[
								702,
								711
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/usr/fcr/node-radar/models/datalayer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5271,
						"regions":
						{
						},
						"selection":
						[
							[
								679,
								683
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1197.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1191,
						"regions":
						{
						},
						"selection":
						[
							[
								723,
								723
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/partial/flight.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1142,
						"regions":
						{
						},
						"selection":
						[
							[
								721,
								721
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 145.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "views/partial/flightdetail.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 979,
						"regions":
						{
						},
						"selection":
						[
							[
								215,
								215
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "views/partial/history.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 871,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 118.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 410,
						"regions":
						{
						},
						"selection":
						[
							[
								153,
								153
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "views/partial/settings.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1117,
						"regions":
						{
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "models/planefinder.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2145,
						"regions":
						{
						},
						"selection":
						[
							[
								920,
								920
							]
						],
						"settings":
						{
							"auto_name": "var PlaneFinder = function() {",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "views/includes/sidebar.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 766,
						"regions":
						{
						},
						"selection":
						[
							[
								538,
								538
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "views/includes/footer.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 107,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "views/includes/navbar.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 981,
						"regions":
						{
						},
						"selection":
						[
							[
								952,
								952
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "public/js/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1894,
						"regions":
						{
						},
						"selection":
						[
							[
								1451,
								1490
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "sass/style.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3218,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Sass/Syntaxes/Sass.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "views/index.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 736,
						"regions":
						{
						},
						"selection":
						[
							[
								541,
								546
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/D/usr/fcr/FM255_Team6/FmSrc/X/v2/sl/sle/Dashboard/ProductionManager.sln",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99287,
						"regions":
						{
						},
						"selection":
						[
							[
								503,
								503
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "public/img/airplane-test.svg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3526,
						"regions":
						{
						},
						"selection":
						[
							[
								3446,
								2326
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 912.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "public/js/controllers/MapCtrl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1260,
						"regions":
						{
						},
						"selection":
						[
							[
								840,
								844
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "views/includes/head.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1365,
						"regions":
						{
						},
						"selection":
						[
							[
								64,
								65
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 24,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29267,
						"regions":
						{
						},
						"selection":
						[
							[
								717,
								498
							]
						],
						"settings":
						{
							"auto_name": "angular.module('demo', ['google-maps'])",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 25,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1481,
						"regions":
						{
						},
						"selection":
						[
							[
								963,
								963
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "public/img/airplane.svg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5970,
						"regions":
						{
						},
						"selection":
						[
							[
								2174,
								2174
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1083.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 78.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "node-radar.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"inde",
				"D:\\usr\\fcr\\Node-radar\\views\\index.jade"
			],
			[
				"index",
				"D:\\usr\\fcr\\Node-radar\\views\\index.jade"
			],
			[
				"men",
				"D:\\usr\\fcr\\Node-radar\\public\\js\\controllers\\MenuCtrl.js"
			],
			[
				"nav",
				"D:\\usr\\fcr\\productionmanager\\views\\includes\\navbar.jade"
			],
			[
				"slf",
				"D:\\usr\\fcr\\FM254_Team2\\FmSrc\\X\\v2\\sl\\slfi\\common\\slfi_obj.pas"
			],
			[
				"remote",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\public\\js\\models\\remote.js"
			],
			[
				"main",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\public\\js\\main.js"
			],
			[
				"fre",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\public\\js\\models\\frequencytable.js"
			],
			[
				"__sp",
				"C:\\octave\\image\\src\\__spatial_filtering__.cc"
			],
			[
				"ap",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\app.js"
			],
			[
				"s",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\models\\soundserver.js"
			],
			[
				"sound",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\public\\js\\models\\sound.js"
			],
			[
				"app",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\app.js"
			],
			[
				"sou",
				"var SoundServer ="
			],
			[
				"remo",
				"D:\\usr\\fcr\\QIcomPCR\\Web\\public\\js\\models\\remote.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 173.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
