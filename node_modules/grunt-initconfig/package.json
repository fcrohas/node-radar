{
  "name": "grunt-initconfig",
  "description": "Conventionally init your configurations",
  "version": "0.0.1",
  "homepage": "https://github.com/pismute/grunt-initconfig",
  "author": {
    "name": "Changwoo Park",
    "email": "pismute@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pismute/grunt-initconfig.git"
  },
  "bugs": {
    "url": "https://github.com/pismute/grunt-initconfig/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pismute/grunt-initconfig/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.coffee",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "cson": "~1.4.2",
    "mdconf": "0.0.2"
  },
  "devDependencies": {
    "grunt-contrib-watch": "~0.5.0",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-coffeelint": "~0.0.7",
    "grunt-simple-mocha": "~0.4.0",
    "should": "~1.2.2",
    "grunt": "~0.4.1",
    "matchdep": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "grunt initconfig"
  ],
  "readme": "# grunt-initconfig\n\n> Seperate your long configuration. It conventionally init your configurations.\n\n## Getting Started\n\nInstall the module with: `npm install grunt-initconfig --save-dev`\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-initconfig');\n```\n\nYou can run initconfig task:\n\n```\ngrunt.task.run('initconfig');\n\ngrunt.registerTask('dev', 'lint server watch');\ngrunt.registerTask('prod', 'lint test');\n```\n\nOtherwise:\n\n```\ngrunt.registerTask('dev', 'initconfig lint server watch');\ngrunt.registerTask('prod', 'initconfig lint test');\n```\n\n## Documentation\n\n`grunt-initconfig` support a lot of formats. Choose your favorate:\n\n* `.yaml`: yaml\n* `.json`: json\n* `.js`: JavaScript\n* `.cson`: [cson][]\n* `.coffee`: CoffeeScript\n* `.md`: [mdconf][]\n\n[cson]: https://github.com/bevry/cson\n[mdconf]: https://github.com/visionmedia/mdconf\n\nPut your configuration files in `.initconfig`. `grunt-initconfig` automatically load and initialize configurations in `.initconfig` directory. Let's see examples:\n\n```\n$ tree -a\n.\n└── .initconfig\n    ├── clean.json\n    ├── coffee\n    │   ├── tasks.coffee\n    │   └── test.coffee\n    ├── coffeelint.coffee\n    ├── copy.yaml\n    ├── jshint.js\n    ├── simplemocha.md\n    └── watch.cson\n```\n\nAll of configuration will be injected into 'grunt config'.\n\nIn `.initconfig`, directory is a namespace. Next two examples is the same.\n\n`.initconfig/coffee-tasks.coffee`:\n\n```coffee\nmodule.exports = (grunt)->\n  coffee:\n    tasks:\n      expand: true\n      cwd: 'src/tasks/'\n      src: ['**/*.coffee']\n      dest: 'tasks/'\n      ext: '.js'\n```\n\n`.initconfig/coffee/tasks.coffee`:\n\n```coffee\nmodule.exports = (grunt)->\n  tasks:\n    expand: true\n    cwd: 'src/tasks/'\n    src: ['**/*.coffee']\n    dest: 'tasks/'\n    ext: '.js'\n```\n\n## Examples\n\n`.yaml`:\n\n```yaml\ncopy:\n  tasks:\n    files:\n      - expand: true\n        cwd: src/tasks\n        src:\n          - '**/*.js'\n        dest: tasks/\n  test:\n    files:\n      - expand: true\n        cwd: src/test\n        src:\n          - '**/*.js'\n        dest: out/test\n```\n\n`.json`:\n\n```js\n{\n  \"clean\": [\n    \"out/\",\n    \"tasks/\",\n    \"*.js\",\n    \"*.js.map\",\n    \"src/**/*.js\",\n    \"src/**/*.js.map\"\n  ]\n}\n```\n\n`.js`:\n\n```js\nmodule.exports = function(grunt) {\n  return {\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc'\n      },\n      tasks: {\n        src: ['src/tasks/**/*.js']\n      },\n      test: {\n        src: ['src/test/**/*.js']\n      }\n    }\n  };\n};\n```\n\n`.cson`:\n\n```coffee\n{\n  watch:\n    gruntfile:\n      files: '<%= coffeelint.gruntfile.src %>'\n      tasks: [\n        'coffeelint:gruntfile'\n      ]\n    jsTasks:\n      files: '<%= jshint.tasks.src %>'\n      tasks: [\n        'jshint:tasks'\n        'test'\n      ]\n    jsTest:\n      files: '<%= jshint.test.src %>'\n      tasks: [\n        'jshint:test'\n        'test'\n      ]\n    coffeeTasks:\n      files: '<%= coffeelint.tasks.src %>'\n      tasks: [\n        'coffeelint:tasks'\n        'coffee:tasks'\n        'test'\n      ]\n    coffeeTest:\n      files: '<%= coffeelint.test.src %>'\n      tasks: [\n        'coffeelint:test'\n        'coffee:test'\n        'test'\n      ]\n}\n```\n\n`.coffee`:\n\n```\nmodule.exports = (grunt)->\n  coffeelint:\n    gruntfile:\n      src: 'Gruntfile.coffee'\n    tasks:\n      src: ['src/tasks/*.coffee']\n    test:\n      src: ['src/test/*.coffee']\n    options:\n      no_trailing_whitespace:\n        level: 'error'\n      max_line_length:\n        level: 'warn'\n```\n\n`.md`:\n\n```markdown\n# simplemocha\n\n## options\n\nBlur Blur Blur\n\n- timeout: 3000\n- ignoreLeaks: false\n- ui: bdd\n- reporter: spec\n\n### globals\n  - should\n\n## test\n\n`test` is target\n\n### src\n\n[mocha]() requires these files like `--require` options\n\n- node_modules/should/lib/should.js\n- out/test/**/*.js\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* 2013-08-25 v0.0.1 Release grunt-initconfig\n\n## License\nCopyright (c) 2013 Changwoo Park\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-initconfig@0.0.1",
  "dist": {
    "shasum": "65c0c77951643275ded8ad0f1567d597fcc4d503",
    "tarball": "http://registry.npmjs.org/grunt-initconfig/-/grunt-initconfig-0.0.1.tgz"
  },
  "_from": "grunt-initconfig@",
  "_npmVersion": "1.3.2",
  "_npmUser": {
    "name": "pismute",
    "email": "pismute@gmail.com"
  },
  "maintainers": [
    {
      "name": "pismute",
      "email": "pismute@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "65c0c77951643275ded8ad0f1567d597fcc4d503",
  "_resolved": "https://registry.npmjs.org/grunt-initconfig/-/grunt-initconfig-0.0.1.tgz"
}
